<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:macro name="kortex_ros2_control" params="
    name
    prefix
    use_fake_hardware:=false
    fake_sensor_commands:=false
    sim_gazebo:=false
    sim_ignition:=false
    sim_isaac:=false
    use_internal_bus_gripper_comm:=true
    tf_prefix
    initial_positions:=${dict(joint_1=0.0,joint_2=0.0,joint_3=0.0,joint_4=0.0,joint_5=0.0,joint_6=0.0,joint_7=0.0)}
    robot_ip
    username
    password
    port
    port_realtime
    session_inactivity_timeout_ms
    connection_inactivity_timeout_ms
    gripper_joint_name
    gripper_max_velocity:=100.0
    gripper_max_force:=100.0">

    <ros2_control name="${name}" type="system">
      <hardware>
        <xacro:if value="${sim_gazebo}">
          <plugin>gazebo_ros2_control/GazeboSystem</plugin>
        </xacro:if>
        <xacro:if value="${sim_ignition}">
          <plugin>ign_ros2_control/IgnitionSystem</plugin>
        </xacro:if>
        <xacro:if value="${sim_isaac}">
          <plugin>topic_based_ros2_control/TopicBasedSystem</plugin>
          <param name="joint_commands_topic">/isaac_joint_commands</param>
          <param name="joint_states_topic">/isaac_joint_states</param>
        </xacro:if>
        <xacro:if value="${use_fake_hardware}">
          <plugin>fake_components/GenericSystem</plugin>
          <param name="fake_sensor_commands">${fake_sensor_commands}</param>
          <param name="state_following_offset">0.0</param>
        </xacro:if>
        <xacro:unless value="${use_fake_hardware or sim_gazebo or sim_ignition or sim_isaac}">
          <plugin>kortex_driver/KortexMultiInterfaceHardware</plugin>
          <param name="robot_ip">${robot_ip}</param>
          <param name="username">${username}</param>
          <param name="password">${password}</param>
          <param name="port">${port}</param>
          <param name="port_realtime">${port_realtime}</param>
          <param name="session_inactivity_timeout_ms">${session_inactivity_timeout_ms}</param>
          <param name="connection_inactivity_timeout_ms">${connection_inactivity_timeout_ms}</param>
          <param name="tf_prefix">"${tf_prefix}"</param>
          <param name="use_internal_bus_gripper_comm">${use_internal_bus_gripper_comm}</param>
          <param name="gripper_joint_name">${gripper_joint_name}</param>
          <param name="gripper_max_velocity">${gripper_max_velocity}</param>
          <param name="gripper_max_force">${gripper_max_force}</param>
        </xacro:unless>
      </hardware>
      <joint name="${prefix}joint_1">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">${initial_positions['joint_1']}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${prefix}joint_2">
        <command_interface name="position">
          <param name="min">-2.41</param>
          <param name="max">2.41</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">${initial_positions['joint_2']}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${prefix}joint_3">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.15</param>
          <param name="max">3.15</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">${initial_positions['joint_3']}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${prefix}joint_4">
        <command_interface name="position">
          <param name="min">-2.66</param>
          <param name="max">2.66</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.2</param>
          <param name="max">3.2</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">${initial_positions['joint_4']}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${prefix}joint_5">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.2</param>
          <param name="max">3.2</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">${initial_positions['joint_5']}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${prefix}joint_6">
        <command_interface name="position">
          <param name="min">-2.23</param>
          <param name="max">2.23</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.2</param>
          <param name="max">3.2</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">${initial_positions['joint_6']}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <joint name="${prefix}joint_7">
        <command_interface name="position">
          <param name="min">{-2*pi}</param>
          <param name="max">{2*pi}</param>
        </command_interface>
        <command_interface name="velocity">
          <param name="min">-3.2</param>
          <param name="max">3.2</param>
        </command_interface>
        <state_interface name="position">
          <param name="initial_value">${initial_positions['joint_7']}</param>
        </state_interface>
        <state_interface name="velocity"/>
        <state_interface name="effort"/>
      </joint>
      <!-- Load the admittance controller --> 
      <sensor name="${prefix}tcp_fts_sensor">
        <state_interface name="force.x"/>
        <state_interface name="force.y"/>
        <state_interface name="force.z"/>
        <state_interface name="torque.x"/>
        <state_interface name="torque.y"/>
        <state_interface name="torque.z"/>
      </sensor>
        <!-- Correctly use the F/T wrench with the fake controller  -->
      <xacro:if value="${use_fake_hardware}">
        <joint name="${prefix}tcp_fts_sensor">
          <command_interface name="force.x"/>
          <command_interface name="force.y"/>
          <command_interface name="force.z"/>
          <command_interface name="torque.x"/>
          <command_interface name="torque.y"/>
          <command_interface name="torque.z"/>
          <state_interface name="force.x"/>
          <state_interface name="force.y"/>
          <state_interface name="force.z"/>
          <state_interface name="torque.x"/>
          <state_interface name="torque.y"/>
          <state_interface name="torque.z"/>
        </joint>
      </xacro:if>
      <xacro:if value="${use_internal_bus_gripper_comm}">
        <joint name="${prefix}${gripper_joint_name}">
          <command_interface name="position" />
          <state_interface name="position"/>
          <state_interface name="velocity"/>
        </joint>
      </xacro:if>
    </ros2_control>
  </xacro:macro>

  <!-- Net FT args -->
  <xacro:arg name="sensor_type" default="ati"/>
  <xacro:arg name="ip_address" default="192.168.1.84"/>
  <xacro:arg name="rdt_sampling_rate" default="500"/>
  <xacro:arg name="internal_filter_rate" default="0"/>
  <xacro:arg name="use_hardware_biasing" default="false"/>
  <xacro:arg name="prefix" default=""/>

  <!-- Import Net FT  macros -->
  <xacro:include filename="$(find net_ft_description)/urdf/net_ft_sensor_macro.urdf.xacro" />
 
  <!-- Force Sensor: Allow the F/T sensor data to be available to both the sim and real hardware -->
  <xacro:unless value="${fake_sensor_commands}">
    <xacro:net_ft_sensor parent="end_effector_link" 
      prefix="$(arg prefix)" 
      ip_address="$(arg ip_address)" 
      rdt_sampling_rate="$(arg rdt_sampling_rate)" 
      sensor_type="$(arg sensor_type)" 
      internal_filter_rate="$(arg internal_filter_rate)" 
      use_hardware_biasing="$(arg use_hardware_biasing)">
      <!-- Create link fixed to the "world" -->
      <link name="world" />
    </xacro:net_ft_sensor>
  </xacro:unless>
</robot>
